.cards{
  display: flex;
}

.cards,
.cards--row{

  align-items: center;
  justify-content: center;
  
  flex-direction: row;
  
  &.cards--align-left,
  &.cards--align-center-left{
    justify-content: flex-start;
    align-items: center;
  }
  
  &.cards--align-center,
  &.cards--align-center-center{
    justify-content: center;
    align-items: center;
  }
  &.cards--align-right,
  &.cards--align-center-right{
    justify-content: flex-end;
    align-items: center;
  }
  
  &.cards--align-top-left{
    justify-content: flex-start;
    align-items: flex-start;
  }
  &.cards--align-top,
  &.cards--align-top-center{
    justify-content: center;
    align-items: flex-start;
  }
  &.cards--align-top-right{
    justify-content: flex-end;
    align-items: flex-start;
  }
  
  &.cards--align-bottom-left{
    justify-content: flex-start;
    align-items: flex-end;
  }
  &.cards--align-bottom,
  &.cards--align-bottom-center{
    justify-content: center;
    align-items: flex-end;
  }
  &.cards--align-bottom-right{
    justify-content: flex-end;
    align-items: flex-end;
  }
  

}

.cards--column{
  
  flex-direction: column;
  
  &.cards--align-left,
  &.cards--align-center-left{
    align-items: flex-start;
    justify-content: center;
  }
  
  &.cards--align-center,
  &.cards--align-center-center{
    align-items: center;
    justify-content: center;
  }
  &.cards--align-right,
  &.cards--align-center-right{
    align-items: flex-end;
    justify-content: center;
  }
  
  &.cards--align-top-left{
    align-items: flex-start;
    justify-content: flex-start;
  }
  &.cards--align-top,
  &.cards--align-top-center{
    align-items: center;
    justify-content: flex-start;
  }
  &.cards--align-top-right{
    align-items: flex-end;
    justify-content: flex-start;
  }
  
  &.cards--align-bottom-left{
    align-items: flex-start;
    justify-content: flex-end;
  }
  &.cards--align-bottom,
  &.cards--align-bottom-center{
    align-items: center;
    justify-content: flex-end;
  }
  &.cards--align-bottom-right{
    align-items: flex-end;
    justify-content: flex-end;
  }
  

}



.cards--reverse{
  
  &:not(.cards--column){

    flex-direction: row-reverse;

    &.cards--align-left,
    &.cards--align-top-left,
    &.cards--align-center-left,
    &.cards--align-bottom-left{
      justify-content: flex-end;
    }
    
    &.cards--align-right,
    &.cards--align-top-right,
    &.cards--align-center-right,
    &.cards--align-bottom-right{
      justify-content: flex-start;
    }

  }

  &.cards--column{

    flex-direction: column-reverse;

    &.cards--align-top,
    &.cards--align-top-left,
    &.cards--align-top-center,
    &.cards--align-top-right{
      justify-content: flex-end;
    }

    &.cards--align-bottom,
    &.cards--align-bottom-left,
    &.cards--align-bottom-center,
    &.cards--align-bottom-right{
      justify-content: flex-start;
    }

  }

}




.cards--overlap{

  $gutter: 0.95em;
  
  //default as .cards-row
  &:not(.cards--column){
    .card{ margin-left: -1*$gutter }
    &:not(.cards--reverse) .card:first-child{ margin-left: 0}
    &.cards--reverse .card:last-child{ margin-left: 0}
  }
  
  &.cards--column{
    .card{ margin-top: -1*$gutter }
    &:not(.cards--reverse) .card:first-child{ margin-top: 0}
    &.cards--reverse .card:last-child{ margin-top: 0}
  }
  
}



/* RANDOM ARRANGEMENT */

.cards--random{
  
  $len: 3;
  $r: 15;
  
  @for $i from 1 through $len {
    
    $rnd: random(2*$r) - $r;
    $angle: #{$rnd}deg;
    
    .card:nth-child(#{$len}n+#{$i}){
        transform: rotateZ($angle);
    }
    
  }

}




/* GROUP HAND */

.cards--in-hand{

  .card{
    position: absolute;
    margin: 0 !important;
  }
  
  $_MAX_GROUP_COUNT: 12;
  
  @for $n from 1 through $_MAX_GROUP_COUNT {

    @for $i from 1 through $n {
        
        $r: 7em;
        $range: 60deg;
      
        $a-offset: -1 * ( 180deg - .5*$range );

        $deg: decimal-round( $range/$n * $i ) - $a-offset;
        $rads: rad($deg);
      
        //circle offset
        //$cx: 0; $cy: 10em;
        $cx: 0; $cy: $r;

        $o-x: $cx + decimal-round( $r * sin($rads), 2);
        $o-y: $cy + decimal-round( $r * cos($rads), 2);
      
        
        $ii: $n - $i;
        
        .card:nth-child(#{$ii}):nth-last-child(#{$i}){
          transform: translateX($o-x) translateY($o-y)  rotateZ(180deg - $deg);
        }
            
        &.--reverse{
          .card:nth-child(#{$i}):nth-last-child(#{$ii}) {
            transform: translateX($o-x) translateY($o-y)  rotateZ(180deg - $deg);
          }
        }
      
    }
    

  }
  
  
}