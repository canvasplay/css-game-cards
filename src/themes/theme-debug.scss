@import "../vars";

//debug variables
$debug-color: #00BCD4;
$debug-gutter: 1em;


.cards-debug{
  perspective-origin: center center;
  perspective: 40em;
  
  .card{
    perspective: initial;
    transform-style: preserve-3d;
  }
  
  
  .card,
  .turner,
  .flipper{
    color: $debug-color;
  }

  .card .back,
  .card .face{
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 800;
    
    //make both card sides' backface visible
    backface-visibility: visible;
  }
  
  //LABELING LAYERS
  .card{
    &:before,
    .turner:before,
    .flipper:before,
    .back:before,
    .face:before{
      content: "." attr(class);
      font-family: Consolas, monaco, monospace;
      display: inline-block;
      line-height: 1;
      font-weight: normal;
      color: $debug-color;
      position: absolute;
      font-size: 0.25em;
      left: 0;
      top: -1.5em;
      transition: opacity 0.3s;
      opacity: 0;
    }
    &:before{ content: '.card' }
  }


  //OUTLINE LAYERS
  .card:after,
  .card .turner:after,
  .card .flipper:after{
    content: '';
    display: block;
    position: absolute;
    top: 0; left: 0;
    border: 0.03em solid $debug-color;
    border-radius: $card-radius;
  	width: $card-width;
  	height: $card-height;
  	color: $debug-color;
    transition: opacity 0.3s;
    opacity: 0;
  }
  
  .card .turner:after,
  .card .flipper:after{
    border-style: dashed;
    background: rgba(0,221,255,0.25);
  }
  
  &.cards-debug--enabled{
  
    //LABELING LAYERS
    .card{
      &:before,
      .turner:before,
      .flipper:before,
      .back:before,
      .face:before{
        opacity: 1;
      }
    }
  
  
    //OUTLINE LAYERS
    .card:after,
    .card .turner:after,
    .card .flipper:after{
      opacity: 1;
    }
  
  
    // 3D prespective
    .card{
      transform:
        translateX(-1*$debug-gutter) translateY($debug-gutter) translateZ(0em)
        rotateX(30deg) rotateY(30deg) rotateZ(-20deg);
        
      .turner{
      	transform: translateZ($debug-gutter) rotateZ(0deg);
      }
      
      .flipper{
      	transform: translateZ(2*$debug-gutter) rotateY(0deg);
      }
      
      .back{
        transform: translateZ(-1*$debug-gutter) rotateY(180deg);
      }
      
      .face{
        transform: translateZ($debug-gutter) rotateY(0deg);
      }
      
    }
  
  
    // FLIP TRANSFORMS
    
    .card .flipper{
       transform: translateZ(2*$debug-gutter) rotateY(0deg);
    }
    
    .card.flip .flipper{
    	transform: translateZ(2*$debug-gutter) rotateY(180deg);
    }
  
    .card.spin .flipper{
    	transform: translateZ(2*$debug-gutter) rotateY(360deg);
    }
  
    .card.spin.flip .flipper{
    	transform: translateZ(2*$debug-gutter) rotateY(540deg);
    }
  
  
  
  
    // TURN TRANSFORMS
  
    .card .turner{
       transform: translateZ($debug-gutter) rotateZ(0deg);
    }
    
    .card.turn-right .turner{
       transform: translateZ($debug-gutter) rotateZ(90deg);
    }
    
    .card.turn-down .turner{
       transform: translateZ($debug-gutter) rotateZ(180deg);
    }
    
    .card.turn-left .turner{
       transform: translateZ($debug-gutter) rotateZ(-90deg);
    }
    
    .card.twist .turner{
       transform: translateZ($debug-gutter) rotateZ(360deg);
    }
    
    .card.turn-right.twist .turner{
       transform: translateZ($debug-gutter) rotateZ(450deg);
    }
    
    .card.turn-down.twist .turner{
       transform: translateZ($debug-gutter) rotateZ(540deg);
    }
    
    .card.turn-left.twist .turner{
       transform: translateZ($debug-gutter) rotateZ(270deg);
    }
    
  }
 
}